1. location.search;    获取url中?及其后面的部分
2. location.replace('http://baidu.com');     
该方法通过指定URL替换当前缓存在历史里（客户端）的项目，因此当使用replace方法之后，你不能通过“前进”和“后退”来访问已经被替换的URL。 
3. navigator对象
	navigator.appName: 浏览器名称
	navigator.appVersion: 浏览器版本
	navigator.appCodeName: 代码
	navigator.platform: 平台
	navigator.cookieEnabled: cookie启用
	navigator.userAgent: 用户代理头
4. Function
	js中的Function经ECMAScript定义为，函数实际是功能完整的对象，Function类得到直接创建语法是
		var func_name = new Function(arg1, arg2, arg3, ……, function_body);
		即最后一个参数是函数体内要执行的代码;
		但是最好不要使用上述构造函数的方式,因为它比传统方式要慢的多,不过，所有函数都应该看做Function类的实例
	Function对象的length属性
		ECMAScript定义的length声明了期望的函数参数的个数
	Function对象的方法
		Function对象有与所有对象共享的方法，如tostring(), valueOf(),这两个方法返回的是函数的源代码
5. window对象和Global对象
	js运行时内置了一个Global对象，在浏览器环境Global就是window对象，nodejs环境下则是Global对象
	window.Global || window.Global = {}		是为了兼容node环境
6. 移动端开发和pc不同的地方
	更轻量
	兼容性除了不同浏览器还要考虑不同机型不同系统
	同时js方法也有很多不同的地方，比如触屏事件、手势等
	图片加载需要慢加载-边滑动边加载，提前用很小像素的图片占位等真正查看或是网络情况良好的时候加载真实的图片
	涉及一些开放API，如地图、微信平台接入、支付宝支付等等
	样式设置需要根据不同屏幕大小用变量计算进行适配
	离线缓存 —— 同时需要解决缓存带来的更新问题
	安全性问题 —— session过期需要重新登录/验证
	微信登录设计绑定逻辑 —— 一个用户只能绑定一个帐号【会导致切换的新帐号在需要登录的页面变成绑定的老帐号】
	购物车逻辑比较复杂，涉及展示促销活动/赠品/普通商品以及店铺相关，增删操作，计算价格动态显示等
	商品详情页某一种搭配的库存检测 —— 要用到算法
	支付尤其注意要阻止重复提交订单【快速点击付款按钮多次】
